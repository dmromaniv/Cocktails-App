{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,gFCAAC,EAAAD,EAAA,S,aAGO,SAASE,EAA2BC,GACzC,MAAO,uCAAuCA,EAAWC,uGAEZD,EAAWE,kEACbF,EAAWG,SAAW,0WAMnD,EAAAL,EAAAM,qBACAJ,EAAWC,aACXI,EAAAC,UAAUC,gG,4CD0B1BC,eAAeC,IACb,MAAMC,GAAmB,EAAAC,EAAAC,qBACvBP,EAAAC,UAAUC,yBAQZ,GALAM,QAAQC,IAAIJ,EAAiBK,SAC7B,EAAAC,EAAAC,8BACEP,EAAiBK,OACjBG,EAAAC,YAAYC,wBAEkB,IAA5BV,EAAiBK,OACnB,OAAO,EAEP,IACE,MAAMM,EAAuB,GAC7B,IAAK,MAAMC,KAAMZ,EAAkB,CACjC,MAAMa,QAAsB,EAAAC,EAAAC,mBAAkBH,GAC9CD,EAAqBK,KAAKH,EAAc,G,CAE1C,OAAOF,C,CACP,MAAOM,GACPd,QAAQC,IAAIa,E,EAzClBC,OAAOC,iBAAiB,QAOxBrB,iBACE,MAAMsB,QAAgCrB,IACjCqB,GAGH,EAAAC,EAAAC,eACEF,EACAZ,EAAAC,YAAYc,kBACZlC,GALFmB,EAAAC,YAAYe,eAAeC,UAAUC,OAAO,Y,IAThDlB,EAAAC,YAAYc,kBAAkBJ,iBAAiB,SA6C/CrB,eAAqC6B,GACnC,GAA0B,WAAtBA,EAAEC,OAAOC,SAAuB,OAEpC,MAAMC,EAAmBH,EAAEC,OAAOG,QAAQ,aACpCC,EAASF,EAAiBG,QAAQrB,GAEpCe,EAAEC,OAAOH,UAAUS,SAAS,iBAC9B,EAAAjC,EAAAkC,oBAAmBH,EAAQrC,EAAAC,UAAUC,yBACrCiC,EAAiBJ,UAEnB,GAAIC,EAAEC,OAAOH,UAAUS,SAAS,eAAgB,CAC9C,MAAME,QAAuB,EAAAtB,EAAAC,mBAAkBiB,GACzCK,GAAyB,EAAAC,EAAAC,6BAA4BH,IAE3D,EAAAI,EAAAC,uBACEJ,EACAD,EAAe,GAAG7C,aAClBI,EAAAC,UAAUC,wB,CAGwC,IAAlDW,EAAAC,YAAYc,kBAAkBmB,SAASrC,QACzCsC,SAASC,Q,IAjEbpC,EAAAC,YAAYoC,cAAc1B,iBACxB,UAoEFrB,eAA0C6B,GACxCA,EAAEmB,iBAEF,MAAMC,EAAcpB,EAAEC,OAAOoB,SAASC,OAAOC,MAAMC,OACnD,IAAKJ,EAEH,YADAK,EAAAlE,GAASmE,OAAOC,QAAQ,0CAI1B,MAAMC,QAA8BxD,IACpCI,QAAQC,IAAImD,GAEZ,MAAMC,EAAyBD,EAAsBE,QAAOC,GAC1DA,EAASlE,cAAcmE,cAAcC,SAASb,EAAYY,kBAG5D,EAAArD,EAAAuD,iBACEL,EAAuBnD,OACvBG,EAAAC,YAAYc,kBACZf,EAAAC,YAAYqD,cAGiB,IAA3BN,KACF,EAAAnC,EAAAC,eACEkC,EACAhD,EAAAC,YAAYc,kBACZlC,IAEF,EAAAgC,EAAA0C,kBACEP,EACAhD,EAAAC,YAAYc,kBACZlC,G","sources":["src/favIngridients.js","src/js/elementsMarkup/ingredientCard.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport './js/modals/mobileMenu';\nimport { constants } from './js/constantsStorage/constants';\nimport { getIngredientById } from './js/api/api';\nimport {\n  renderGallery,\n  createPagination,\n} from './js/elementsRender/renderGallery';\nimport { elementsRef } from './js/elementsRefs/references';\nimport {\n  getFromLocalStorage,\n  updateLocalStorage,\n} from './js/localStorage/localStorage';\nimport { createIngredientCardMarkup } from './js/elementsMarkup/ingredientCard';\nimport { createIngredientModalMarkup } from './js/modals/ingredientModalMarkup';\nimport { createIngredientModal } from './js/modals/createModal';\nimport {\n  showNotFoundMessageOnFavPage,\n  showNotFoundMsg,\n} from './js/utils/utils';\n\nwindow.addEventListener('load', favIngredientHandler);\nelementsRef.ingredientsListEl.addEventListener('click', ingredientCardHandler);\nelementsRef.searchFormRef.addEventListener(\n  'submit',\n  searchFavIngredientHandler\n);\n\nasync function favIngredientHandler() {\n  const filteredIngredientsById = await getIngredientsByStorageIds();\n  if (!filteredIngredientsById) {\n    elementsRef.notFoundTextEl.classList.remove('is-hidden');\n  } else {\n    renderGallery(\n      filteredIngredientsById,\n      elementsRef.ingredientsListEl,\n      createIngredientCardMarkup\n    );\n  }\n}\n\nasync function getIngredientsByStorageIds() {\n  const favIngredientsId = getFromLocalStorage(\n    constants.favIngredientStorageKey\n  );\n\n  console.log(favIngredientsId.length);\n  showNotFoundMessageOnFavPage(\n    favIngredientsId.length,\n    elementsRef.notFoundMsgOnFavPageEl\n  );\n  if (favIngredientsId.length === 0) {\n    return false;\n  } else {\n    try {\n      const ingredientsCardsInfo = [];\n      for (const id of favIngredientsId) {\n        const favIngredient = await getIngredientById(id);\n        ingredientsCardsInfo.push(favIngredient[0]);\n      }\n      return ingredientsCardsInfo;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nasync function ingredientCardHandler(e) {\n  if (e.target.nodeName !== 'BUTTON') return;\n\n  const ingredientCardEl = e.target.closest('[data-id]');\n  const cardId = ingredientCardEl.dataset.id;\n\n  if (e.target.classList.contains('js-btn-fav')) {\n    updateLocalStorage(cardId, constants.favIngredientStorageKey);\n    ingredientCardEl.remove();\n  }\n  if (e.target.classList.contains('js-btn-more')) {\n    const ingredientInfo = await getIngredientById(cardId);\n    const ingredientModalContent = createIngredientModalMarkup(ingredientInfo);\n\n    createIngredientModal(\n      ingredientModalContent,\n      ingredientInfo[0].idIngredient,\n      constants.favIngredientStorageKey\n    );\n  }\n  if (elementsRef.ingredientsListEl.children.length === 0) {\n    location.reload();\n  }\n}\n\nasync function searchFavIngredientHandler(e) {\n  e.preventDefault();\n\n  const searchQuery = e.target.elements.search.value.trim();\n  if (!searchQuery) {\n    Notiflix.Notify.warning('Please, enter the correct search query');\n    return;\n  }\n\n  const filteredCocktailsById = await getIngredientsByStorageIds();\n  console.log(filteredCocktailsById);\n\n  const filteredCocktailByName = filteredCocktailsById.filter(cocktail =>\n    cocktail.strIngredient.toUpperCase().includes(searchQuery.toUpperCase())\n  );\n\n  showNotFoundMsg(\n    filteredCocktailByName.length,\n    elementsRef.ingredientsListEl,\n    elementsRef.paginationEl\n  );\n\n  if (filteredCocktailByName !== 0) {\n    renderGallery(\n      filteredCocktailByName,\n      elementsRef.ingredientsListEl,\n      createIngredientCardMarkup\n    );\n    createPagination(\n      filteredCocktailByName,\n      elementsRef.ingredientsListEl,\n      createIngredientCardMarkup\n    );\n  }\n}\n","import { updateFavBtnContent } from '../btnComponent/updateBtnContent';\nimport { constants } from '../constantsStorage/constants';\n\nexport function createIngredientCardMarkup(ingredient) {\n  return `<li class=\"favorite__item\" data-id=\"${ingredient.idIngredient}\">\n        <div class=\"ingredient-card\">\n          <h2 class=\"ingredient-card__title\">${ingredient.strIngredient}</h2>\n          <p class=\"ingredient-card__text\">${ingredient.strType || '***'}</p>\n          <div class=\"buttons-wrap\">\n            <button class=\"button cocktail-card__btn cocktail-card__btn--accent js-btn-more\" type=\"button\">\n              Learn more\n            </button>\n            <button class=\"button cocktail-card__btn cocktail-card__btn--transp cocktail-card__btn--centered js-btn-fav\" type=\"button\">\n              ${updateFavBtnContent(\n                ingredient.idIngredient,\n                constants.favIngredientStorageKey\n              )}\n            </button>\n          </div>\n        </div>\n      </li>`;\n}\n"],"names":["$7Y9D8","parcelRequire","$kK2SA","$b90def69a506abc1$export$56f810357ef8c53c","ingredient","idIngredient","strIngredient","strType","updateFavBtnContent","$gGAPY","constants","favIngredientStorageKey","async","$25a25e7401f3e055$var$getIngredientsByStorageIds","favIngredientsId","$e6wCE","getFromLocalStorage","console","log","length","$jXDaJ","showNotFoundMessageOnFavPage","$4iYcx","elementsRef","notFoundMsgOnFavPageEl","ingredientsCardsInfo","id","favIngredient","$4emys","getIngredientById","push","error","window","addEventListener","filteredIngredientsById","$7ExxV","renderGallery","ingredientsListEl","notFoundTextEl","classList","remove","e","target","nodeName","ingredientCardEl","closest","cardId","dataset","contains","updateLocalStorage","ingredientInfo","ingredientModalContent","$3TGxB","createIngredientModalMarkup","$6bDXm","createIngredientModal","children","location","reload","searchFormRef","preventDefault","searchQuery","elements","search","value","trim","$parcel$interopDefault","Notify","warning","filteredCocktailsById","filteredCocktailByName","filter","cocktail","toUpperCase","includes","showNotFoundMsg","paginationEl","createPagination"],"version":3,"file":"favIngridients.2ed44de3.js.map"}